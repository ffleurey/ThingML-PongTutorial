import "../lib/_Timer.thingml"

object Array;

// Manage a set of software timers.
thing TimerBrowser includes TimerMsgs
{

  property Timeouts : Array = `{}` as Array
	
	provided port timer {
		receives timer_start, timer_cancel
		sends timer_timeout
	}

  function startTimer(id: Integer, delay : Integer) do
    `
      if (`&Timeouts&`[`&id&`] != undefined) {
        ` cancel(id) `
      }
      
      `&Timeouts&`[`&id&`] = setTimeout(() => {
        ` timer!timer_timeout(id) `
        `&Timeouts&`[`&id&`] = undefined;
      }, `&delay&`);
    `
    end

    function cancel(id: Integer) do
      `
        if (`&Timeouts&`[`&id&`] != undefined) {
          clearTimeout(`&Timeouts&`[`&id&`]);
          `&Timeouts&`[`&id&`] = undefined;
        }
      `
    end

    statechart SoftTimer init default {
        state default {

          internal event m : timer?timer_start
            guard m.time > 0
            action startTimer(m.id, m.time)

          internal cancel
            event m : timer?timer_cancel
            action cancel(m.id)
        }
    }
}