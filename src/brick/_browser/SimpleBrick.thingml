import "Display_BrowserCanvas.thingml"
import "../SimpleBrick.thingml"
import "../Display.thingml"
import "../DummyController.thingml"
import "TimerBrowser.thingml"

thing JavaScriptBrickHacks
{
  statechart States init Hack {
    state Hack {
      on entry do
        '
          SimpleBrick.prototype.createBricks = function() {
            this._js_bricks = [];
            for (var y = 0; y < this.SimpleBrick_BRICK_ROWS_var; y++) {
              this._js_bricks[y] = [];
              for (var x = 0; x < 8; x++) {
                this._js_bricks[y][x] = true;
                this.drawBrick(x, y);
              }
            }
          };
          
          SimpleBrick.prototype.bricksLeft = function() {
            var result = 0;
            for (var y = 0; y < this.SimpleBrick_BRICK_ROWS_var; y++) {
              for (var x = 0; x < 8; x++) {
                if (this._js_bricks[y][x]) result += 1;
              }
            }
            return result;
          };
          
          SimpleBrick.prototype.collideBrick = function(xpos, ypos) {
            var bry = Math.floor((ypos-this.SimpleBrick_TOP_var-20*this.SimpleBrick_SCALE_var)/(this.SimpleBrick_BRICK_HEIGHT_var*this.SimpleBrick_SCALE_var));
            var result = false;
            if (bry >= 0 && bry < this.SimpleBrick_BRICK_ROWS_var) {
              var brx = Math.floor((xpos-this.SimpleBrick_LEFT_var)/((this.SimpleBrick_RIGHT_var-this.SimpleBrick_LEFT_var)/8));
              if (this._js_bricks[bry][brx]) {
                this.removeBrick(brx, bry);
                this._js_bricks[bry][brx] = false;
                result = true;
              }
            }
            return result;
          };
        '
      end
    }
  }
}

configuration SimpleBrickBrowserCanvas 
{
	instance bb : SimpleBrick
	instance disp : BrowserCanvasDisplay
	instance ctrl : VelocityController
	instance timer : TimerBrowser
  
  instance hacks : JavaScriptBrickHacks
	
	connector bb.clock => timer.timer
  connector ctrl.clock => timer.timer
	
	connector bb.display => disp.display
	connector bb.controller => ctrl.controls
	connector ctrl.ctrl_in => disp.vctrl
}  