/**
 * File generated by the ThingML IDE
 * /!\Do not edit this file/!\
 * In case of a bug in the generated code,
 * please submit an issue on our GitHub
 **/

package org.thingml.generated;

import org.thingml.java.*;
import org.thingml.java.ext.*;

import org.thingml.generated.api.*;
import org.thingml.generated.messages.*;

import java.util.*;
public class Main {
//Things
public static Java2DDisplay Java2DDisplay_disp;
public static DrawThingML DrawThingML_bb;
public static void main(String args[]) {
//Things
Java2DDisplay_disp = (Java2DDisplay) new Java2DDisplay("disp (Java2DDisplay)", (int)0, (int) (5), (int) (0), (int) (0), (int) (0), (int) (0), (int)0, (int) (0), (int) (0)).buildBehavior(null, null);
DrawThingML_bb = (DrawThingML) new DrawThingML("bb (DrawThingML)", (int) (128), (int) (160)).buildBehavior(null, null);
//Connecting internal ports...
//Connectors
Java2DDisplay_disp.getDisplay_port().addListener(DrawThingML_bb.getDisplay_port());
DrawThingML_bb.getDisplay_port().addListener(Java2DDisplay_disp.getDisplay_port());
//Init instances (queues, etc)
Java2DDisplay_disp.init();
DrawThingML_bb.init();
//Network components for external connectors
/*$NETWORK$*/
//External Connectors
/*$EXT CONNECTORS$*/
/*$START$*/
Java2DDisplay_disp.start();
DrawThingML_bb.start();
//Hook to stop instances following client/server dependencies (clients firsts)
Runtime.getRuntime().addShutdownHook(new Thread() {
public void run() {
DrawThingML_bb.stop();
Java2DDisplay_disp.stop();
/*$STOP$*/
}
});

}
}
